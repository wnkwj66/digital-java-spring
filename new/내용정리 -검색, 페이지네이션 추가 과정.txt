
1. Criteria 클래스 생성(샘플 코드 참고)
 - 멤버 변수의 역할
 - 멤버 변수가 없는 getter 역할(getStartPage())
 - 생성자에서 초기값 설정
2. PageMaker 클래스 생성
 - 멤버 변수의 역할
 - 멤버 변수를 설정하는 메소드의 역할(calcData())
3. 컨트롤러에서 PageMaker와 Criteria를 이용하여 작업(/bosrd/list)
 - 기존의 boardService에게 아무것도 알려주지 않고 일을 시켰는데
   현재 페이지, 검색어, 검색타입을 알려주고 일을 시키도록 수정
 - 현재 페이지, 검색어, 검색타입에 맞게 페이지메이커를 생성하도록   
   boardService에게 일을 시킴
 - 화면에 페이지 메이커와 게시글리스트를 전송
4. 서비스에서 수정된 메서드와 새로 생성된 메소드를 작업
 - 페이지메이커 생성 메서드 : getPageMaker()
   - 페이지메이커를 만들기 위해 boardDao에게 현재 검색어, 타입에 맞는 게시물 갯수를 알려달라고 일을 시킴 : getTotalCount()
5. 서비스에서 수정된 메서드와 새로 생성된 메서드를 추가
6. Mapper에서 쿼리문을 수정하고, 새로운 메서드에 맞는 쿼리문을 추가
 - 타입과 검색어에 맞는 게시글들을 가져올 수 있도록 쿼리를 수정
7. 화면에서 수정 작업(list.jsp)
 - 컨트롤러가 보내준 페이지메이커를 이용하여 페이지네이션을 구성
 - 검색창과 타입에 현재 검색어와 타입에 맞도록 선택
 - 게시글 링크를 수정 : 현재 페이지와 타입과 검색어가 들어가도록
8. 화면에서 수정 작업(detail.jsp)
 - 목록 버튼 링크에 페이지, 타입, 검색어가 들어가도록 링크 수정
9. 컨트롤러 수정(/board/detail)
 - 현재페이지 정보를 가져와서 화면에 전송