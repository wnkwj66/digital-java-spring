* 현재 검색과 페이지네이션 생성

1.Criteria 클래스 생성(샘플 코드 참고)
 - 멤버 변수의 역할 
 - 멤버변수가 없는 Getter 역할(getStartPage())
 - 생성자에서 초기값 설정

2. PageMaker 클래스 생성
 - 멤버 변수의 역할 
 - 멤버 변수를 설정하는 메소드의 역할(calcData())

3. 컨트롤러에서 PageMaker와  Criteria를 이용하여 작업(/board/list)
 [컨트롤러 역할]
 - 과거) 기존의 boardService에게 아무것도 알려주지 않고 일을 시켰음.(isDel이 N인 게시물 모두 가져옴)
   현재) 현재 페이지 , 검색어, 검색타입을 알려주고 일을 시키도록 수정 => boardController.java에서  list= boardService.getBoardList(cri);
 - 현재 페이지, 검색어, 검색타입에 맞게 페이지메이커를 생성하도록 boardService에게 일을 시킴 => boardController.java에서 PageMaker pm = boardService.getPageMaker(cri);
 - 화면에 페이지 메이커와 게시글리스트를 전송

4. 서비스에서 수정된 메서드와 새로 생성된 메서드를 작업
 - ServiceImp에서 getBoardList(cri);// getPageMaker를 오버라이드로 수정
 - 페이지 메이커 생성 메서드 : getPageMaker()
  -페이지 메이커를 만들기 위해 boardDao에게 현재 검색어, 타입에 맞는 게시물 갯수를 알려달라고 일을 시킴 => getTotalCount()

5. 서비스에서 수정된 메서드와 새로 생성된 메서드를 추가 =>Dao

6. Mapper에서 쿼리문을 수정하고, 새로운 메서드에 맞는 쿼리문을 추가 
 -이때 타입과 검색어에 맞는 게시글들을 가져올 수 있도록 쿼리를 수정

7. 화면에서 수정작업(list.jsp):
 - 컨트롤러가 보내준 페이지 메이커를 이용하여 페이지네이션을 구성하고,
 - 검색창과 타입에 현재 검색어와 타입에 맞도록 선택
 - 게시글 링크를 수정 : 현재 페이지와 타입과 검색어가 들어가도록
 1). 페이지네이션 코드 추가
 2). 이전, 다음 버튼 처리
  - 활성화/비활성화 처리
  - 링크
 3). 페이지숫자 처리
  - 각 페이지 처리
  - active 처리
  - 링크 처리
 4). 게시글 제목 처리
  - 게시글 제목 링크 수정
 5) 타입, 검색창, 버튼 추가
  - 타입, 검색창, 버튼 코드 추가
  - name 지정
  - form태그에 action 추가
  - 검색 후 검색창에 검색어 유지, 타입도 유지
8. 화면에서 수정 작업(detail.jsp)
 - 목록 버튼 링크에 페이지, 타입, 검색어가 들어가도록 링크 수정

9. 컨트롤러 수정 (/board/detail)
 - 현재 페이지 정보를 가져와서 화면에 전송